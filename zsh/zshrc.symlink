##
# Slurp in zsh files from topic directories:
# * topic/*.zsh: Any files ending in `.zsh` get loaded into your environment.
# * topic/path.zsh: Any file named `path.zsh` is loaded first and is expected to setup `$PATH` or similar.
# * topic/completion.zsh: Any file named `completion.zsh` is loaded last and is expected to setup autocomplete.
##
export DOTFILES=$HOME/.dotfiles
export PROJECTS=$HOME/Projects

# All of our zsh files
typeset -U config_files
config_files=($DOTFILES/**/*.zsh)

# Load the path files
for file in ${(M)config_files:#*/path.zsh}
do
  source $file
done

# Load everything but the path and completion files
for file in ${${config_files:#*/path.zsh}:#*/completion.zsh}
do
  source $file
done

# Initialize autocomplete here, otherwise functions won't be loaded
autoload -U compinit
compinit

# Load every completion after autocomplete loads
for file in ${(M)config_files:#*/completion.zsh}
do
  source $file
done

# Autojump.
[[ -s `brew --prefix`/etc/autojump.sh ]] && . `brew --prefix`/etc/autojump.sh

unset config_files

##
# oh-my-zsh
##

# Path to your oh-my-zsh configuration.
ZSH=$HOME/.oh-my-zsh

# Set name of the theme to load.
# Look in ~/.oh-my-zsh/themes/
# Optionally, if you set this to "random", it'll load a random theme each
# time that oh-my-zsh is loaded.
ZSH_THEME="agnoster"

# Uncomment to change how often before auto-updates occur? (in days)
export UPDATE_ZSH_DAYS=1

# Prevent oh-my-zsh from trying to name tmux windows and terminal titles.
DISABLE_AUTO_TITLE="true"

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
plugins=(git safe-paste colored-man-pages colorize pip golang gradle python brew osx zsh-syntax-highlighting zsh-autosuggestions)

source $ZSH/oh-my-zsh.sh

##
# Functions
##

# Allows you to type `c <tab>` to your projects directory.
c() { cd $PROJECTS/$1; }
_c() { _files -W $PROJECTS -/; }
compdef _c c

# autoenv.
[ -f /usr/local/opt/autoenv/activate.sh ] && source /usr/local/opt/autoenv/activate.sh ]
